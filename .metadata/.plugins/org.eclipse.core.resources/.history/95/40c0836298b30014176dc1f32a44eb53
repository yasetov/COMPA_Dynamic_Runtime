/*******************************************************************/
/*                                                                 */
/* This file is automatically generated by linker script generator.*/
/*                                                                 */
/* Version:                                 */
/*                                                                 */
/* Copyright (c) 2010 Xilinx, Inc.  All rights reserved.           */
/*                                                                 */
/* Description : MicroBlaze Linker Script                          */
/*                                                                 */
/*******************************************************************/

_STACK_SIZE = DEFINED(_STACK_SIZE) ? _STACK_SIZE : 0x400;
_HEAP_SIZE = DEFINED(_HEAP_SIZE) ? _HEAP_SIZE : 0x400;

/* Define Memories in the system */

MEMORY
{
   ps7_ddr_0_S_AXI_BASEADDR : ORIGIN = 0x50000000, LENGTH = 0x20000000
   sched_callers_mem  : ORIGIN = 0x20000000, LENGTH = 0x8000
   actors_code_mem  : ORIGIN = 0x20008000, LENGTH = 0x1fff8000
}

/* Specify the default entry point to the program */

/*ENTRY(_start)*/

/* Define the sections, and where they are mapped in memory */

SECTIONS
{

.vectors.reset 0x00000000 (NOLOAD) : {
   KEEP (*(.vectors.reset))
} 

.vectors.sw_exception 0x00000008 (NOLOAD) : {
   KEEP (*(.vectors.sw_exception))
} 

.vectors.interrupt 0x00000010 (NOLOAD) : {
   KEEP (*(.vectors.interrupt))
} 

.vectors.hw_exception 0x00000020 (NOLOAD) : {
   KEEP (*(.vectors.hw_exception))
} 

sched_callers_section : {
   *(sched_callers_section)
} > sched_callers_mem

actors_code_section (NOLOAD) : {
	*libActors.a:(.text)
	*libActors.a:(.rodata)
	*libActors.a:(.data)
	*libActors.a:(.sdata)
	*libActors.a:(.sdata2)
	*libActors.a:(.bss)
	*libActors.a:(.sbss)
	*libActors.a:(.sbss2)
} > actors_code_mem

.text : {
   *(.text)
   *(.text.*)
   *(.gnu.linkonce.t.*)
} > actors_code_mem

.init (NOLOAD) : {
   KEEP (*(.init))
} > actors_code_mem

.fini (NOLOAD) : {
   KEEP (*(.fini))
} > actors_code_mem

.ctors (NOLOAD) : {
   __CTOR_LIST__ = .;
   ___CTORS_LIST___ = .;
   KEEP (*crtbegin.o(.ctors))
   KEEP (*(EXCLUDE_FILE(*crtend.o) .ctors))
   KEEP (*(SORT(.ctors.*)))
   KEEP (*(.ctors))
   __CTOR_END__ = .;
   ___CTORS_END___ = .;
} > actors_code_mem

.dtors (NOLOAD) : {
   __DTOR_LIST__ = .;
   ___DTORS_LIST___ = .;
   KEEP (*crtbegin.o(.dtors))
   KEEP (*(EXCLUDE_FILE(*crtend.o) .dtors))
   KEEP (*(SORT(.dtors.*)))
   KEEP (*(.dtors))
   PROVIDE(__DTOR_END__ = .);
   PROVIDE(___DTORS_END___ = .);
} > actors_code_mem

.rodata : {
   __rodata_start = .;
   *(.rodata)
   *(.rodata.*)
   *(.gnu.linkonce.r.*)
   __rodata_end = .;
} > actors_code_mem

.sdata2 : {
   . = ALIGN(8);
   __sdata2_start = .;
   *(.sdata2)
   *(.sdata2.*)
   *(.gnu.linkonce.s2.*)
   . = ALIGN(8);
   __sdata2_end = .;
} > actors_code_mem

.sbss2  : {
   __sbss2_start = .;
   *(.sbss2)
   *(.sbss2.*)
   *(.gnu.linkonce.sb2.*)
   __sbss2_end = .;
} > actors_code_mem

.data : {
   . = ALIGN(4);
   __data_start = .;
   *(.data)
   *(.data.*)
   *(.gnu.linkonce.d.*)
   __data_end = .;
} > actors_code_mem

.got (NOLOAD) : {
   *(.got)
} > actors_code_mem

.got1 (NOLOAD) : {
   *(.got1)
} > actors_code_mem

.got2 (NOLOAD) : {
   *(.got2)
} > actors_code_mem

.eh_frame (NOLOAD) : {
   *(.eh_frame)
} > actors_code_mem

.jcr (NOLOAD) : {
   *(.jcr)
} > actors_code_mem

.gcc_except_table (NOLOAD) : {
   *(.gcc_except_table)
} > actors_code_mem

.sdata : {
   . = ALIGN(8);
   __sdata_start = .;
   *(.sdata)
   *(.sdata.*)
   *(.gnu.linkonce.s.*)
   __sdata_end = .;
} > actors_code_mem

.sbss : {
   . = ALIGN(4);
   __sbss_start = .;
   *(.sbss)
   *(.sbss.*)
   *(.gnu.linkonce.sb.*)
   . = ALIGN(8);
   __sbss_end = .;
} > actors_code_mem

.tdata : {
   __tdata_start = .;
   *(.tdata)
   *(.tdata.*)
   *(.gnu.linkonce.td.*)
   __tdata_end = .;
} > actors_code_mem

.tbss : {
   __tbss_start = .;
   *(.tbss)
   *(.tbss.*)
   *(.gnu.linkonce.tb.*)
   __tbss_end = .;
} > actors_code_mem

.bss : {
   . = ALIGN(4);
   __bss_start = .;
   *(.bss)
   *(.bss.*)
   *(.gnu.linkonce.b.*)
   *(COMMON)
   . = ALIGN(4);
   __bss_end = .;
} > actors_code_mem

_SDA_BASE_ = __sdata_start + ((__sbss_end - __sdata_start) / 2 );

_SDA2_BASE_ = __sdata2_start + ((__sbss2_end - __sdata2_start) / 2 );

/* Generate Stack and Heap definitions */

.heap (NOLOAD) : {
   . = ALIGN(8);
   _heap = .;
   _heap_start = .;
   . += _HEAP_SIZE;
   _heap_end = .;
} > actors_code_mem

.stack (NOLOAD) : {
   _stack_end = .;
   . += _STACK_SIZE;
   . = ALIGN(8);
   _stack = .;
   __stack = _stack;
} > actors_code_mem

_end = .;
}

